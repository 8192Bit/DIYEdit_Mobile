plugins {
    id 'com.android.application'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

android {
    compileSdk 33

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/cpp/fluidsynth/lib']
        }
    }


    defaultConfig {
        applicationId "com.x8192Bit.DIYEdit_Mobile"
        minSdk 16
        targetSdk 33
        versionCode 1
        versionName '1.0.0'
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // I do not want the decompilers works harder. I just want it loads and runs faster. If you want to modify its resource, please do it and build from the source code.
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'x8192Bit.DIYEdit_Mobile'
    lint {
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    ndkVersion '25.2.9519653'
}

configurations {
    all*.exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.github.mendhak:storage-chooser:1715784d34'
    implementation 'net.danlew:android.joda:2.12.5'
    implementation 'jp.kshoji:jfugue-android:4.0.3:@aar'
    implementation files('libs/javax-sound-midi-0.0.4.aar')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
    // partly copied from https://stackoverflow.com/questions/75263047/duplicate-class-in-kotlin-android hope works
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation"
}
